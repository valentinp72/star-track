name: "Build iOS IPA app"

on:
  # manual trigger but change to any supported event
  workflow_dispatch:
    branches: [main]
  push:
    tags:
      - "v*.*.*"

jobs:
  build_ipa:
    env:
      commitmsg: ${{ github.event.head_commit.message }}
    runs-on: macos-latest
    steps:
      - name: Checking out the repository
        uses: actions/checkout@v3

      - name: Setupping Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19.x
          cache: 'npm'
          cache-dependency-path: 'brain/client/package-lock.json'

      - name: Installing app dependencies
        working-directory: brain/client
        run: |
          npm install -g @ionic/cli
          npm ci

      - name: Building Ionic
        working-directory: brain/client
        run: |
          ionic capacitor copy ios
          ionic capacitor update

      - name: Installing the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Building the app archive
        run: |
          xcodebuild clean archive \
            -workspace brain/client/ios/App/App.xcworkspace \
            -scheme App \
            -archivePath ${{ runner.temp }}/App.xcarchive \
            -sdk iphoneos \
            -configuration 'Release' \
            -destination 'generic/platform=iOS'

      - name: Creating the IPA file
        working-directory: ${{ runner.temp }}
        run: |
          mkdir Payload
          cp -r App.xcarchive/Products/Applications/App.app Payload/.
          zip -r StarTrack.ipa Payload

      # - name: uploading the IPA file
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: app
      #     path: ${{ runner.temp }}/StarTrack.ipa
      #     retention-days: 3

      - name: Uploading the IPA file to the release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ runner.temp }}/StarTrack.ipa

      - name: Creating the Github Pages content
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          mkdir ${{ runner.temp }}/gh-pages
          export CURRENT_VERSION=`echo ${{ github.ref.name }} | sed 's/^v//g'`
          export CURRENT_DATE=`date +"%Y-%m-%dT%H:%M:%S%z"`,
          export CURRENT_DESCRIPTION=${{ env.commitmsg }}
          export CURRENT_DOWNLOAD_IPA_URL=https://github.com/valentinp72/star-track/releases/download/${{ github.ref.name }}/StarTrack.ipa
          export CURRENT_SIZE=`stat -f%z ${{ runner.temp }}/StarTrack.ipa`
          envsubst < brain/client/altstore.json > ${{ runner.temp }}/gh-pages/altstore.json

      - name: Deploying to the Github Pages branch
        uses: peaceiris/actions-gh-pages@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ runner.temp }}/gh-pages
