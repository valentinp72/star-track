name: "Build iOS IPA app"

on:
  # manual trigger but change to any supported event
  workflow_dispatch:
    branches: [main]

jobs:
  build_with_signing:
    runs-on: macos-latest
    steps:
      - name: checking out the repository
        uses: actions/checkout@v3

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles   
      - name: building the app archive
        run: |
          # export CODE_SIGN_IDENTITY=""
          # export CODE_SIGNING_REQUIRED="NO"
          # export CODE_SIGN_ENTITLEMENTS=""
          # export CODE_SIGNING_ALLOWED="NO"
          xcodebuild clean archive \
            -workspace brain/client/ios/App/App.xcworkspace \
            -scheme App \
            -archivePath App.xcarchive \
            -sdk iphoneos \
            -configuration development

      - name: creating the IPA file
        run: |
          mkdir ${{ runner.temp }}/Payload
          cp -r App.xcarchive/Products/Applications/App.app ${{ runner.temp }}/Payload/.
          zip -r ${{ runner.temp }}/StarTrack.ipa ${{ runner.temp }}/Payload

      - name: uploading the IPA file
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: ${{ runner.temp }}/StarTrack.ipa
          # you can also archive the entire directory 
          # path: ${{ runner.temp }}/build
          retention-days: 3

      # - uses: sparkfabrik/ios-build-action@v1.2.0
      #   with:
      #       build-pods: true
      #       pods-path: "brain/client/ios/App/Podfile"
      #       configuration: Release
      #       export-method: development
      #       workspace-path: "brain/client/ios/App/App.xcworkspace"
      #       project-path: 'brain/client/ios/App/App.xcodeproj'
      #       scheme: App
      #       output-path: build-${{ github.sha }}.ipa
      #       p12-base64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
      #       certificate-password: ${{ secrets.P12_PASSWORD }}
      #       mobileprovision-base64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
      #       code-signing-identity: ${{ secrets.TEAM_NAME }}
      #       # apple-key-id: ${{ secrets.APPLE_KEY_ID }}
      #       # apple-key-issuer-id: ${{ secrets.APPLE_KEY_ISSUER_ID }}
      #       # apple-key-content: ${{ secrets.APPLE_KEY_CONTENT }}
      #       team-id: ${{ secrets.TEAM_ID }}
      #       # team-name: ${{ secrets.TEAM_NAME }}
      #       # match-password: ${{ secrets.MATCH_PASSWORD }}
      #       # match-git-url: ${{ secrets.MATCH_GIT_URL }}
      #       # match-git-basic-authorization: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
      #       # match-build-type: "development"
      #       # browserstack-upload: true
      #       # browserstack-username: ${{ secrets.BROWSERSTACK_USERNAME }}
      #       # browserstack-access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
      #       # fastlane-env: stage
      #       # ios-app-id: eu.vpelloin.startrack
